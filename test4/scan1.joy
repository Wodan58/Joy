(*
    module  : scan1.joy
    version : 1.2
    date    : 08/29/24
*)
3 setecho.

(* unassign w/o parameter *)
unassign.

0 setecho.

(* shell escape *)
$ TECO
$ ls

(* verify that addition is not commutative *)
1 'A +.

(* include file *)
"exist.joy" include.

(* allowed character escapes *)
"\b\t\n\v\f\r\"\'\\".	# "

(* incomplete character escape *)
"\07".

(* unknown character escapes *)
"\a".

(* unwanted character escapes *)
"\000".
"\001".
'\000.
'\001.	# this one is actually allowed

(* unknown characters *)
().

(* line comment *)
# single line comment

(* character escape *)
'\007.

(* floating point *)
3.14.

(* another floating point *)
5.0.

(* maxint overflow *)
99999999999999999999.

(* octal + decimal number *)
078.

(* hexadecimal number + symbol *)
0x7G.

LIBRA
G == 'G.

CONST
true == 0.

(* HIDE .. IN .. END *)
HIDE
_ == -1 3.14 [] {} ;
IN
one == _
END

(* MODULE .. END *)
MODULE m
PRIVATE
PUBLIC
END

(* atom expected as name of module *)
MODULE 10.

(* == expected in definition *)
DEFINE G 10.

(* empty compound *)
MODULE m
END

(* overwriting inbuilt *)
DEFINE dup == 2 *.

(* incomplete list *)
[ 1 2 3 .

(* incomplete set *)
{ 1 2 3 .

get undefined.
undefined

(* illegal component of set *)
{1 2 3 LIBRA}.

(* illegal component of list *)
[1 2 3 LIBRA].

(* illegal factor *)
[ ( ].

(* illegal factor *)
[ ) ].

(* illegal factor *)
[ } ].

(* read keyword? *)
get.
LIBRA

